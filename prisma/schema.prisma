generator client {
  provider = "prisma-client-js"
  output   = "./prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String
  rank         String
  name         String
  enlistedAt   DateTime
  tasks        Task[]
  randomSeeds  RandomSeed[]
  exempts      Exempt[]
  participants Participant[]
}

model Exempt {
  id        String       @id @default(uuid())
  startedAt DateTime
  endedAt   DateTime
  userId    String
  user      User         @relation(fields: [userId], references: [id])
  excuseId  String
  excuse    ExemptExcuse @relation(fields: [excuseId], references: [id])
}

model ExemptExcuse {
  id      String   @id @default(uuid())
  reason  String
  exempts Exempt[]
}

model Mission {
  id           String        @id @default(uuid())
  title        String
  description  String
  roles        Role[]
  participants Participant[]
  RandomSeed   RandomSeed[]
}

model Role {
  id        String  @id @default(uuid())
  name      String
  missionId String
  mission   Mission @relation(fields: [missionId], references: [id])
  tasks     Task[]
}

model Task {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])
  roleId String
  role   Role   @relation(fields: [roleId], references: [id])
}

model Participant {
  id        String  @id @default(uuid())
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  missionId String
  mission   Mission @relation(fields: [missionId], references: [id])
}

model RandomSeed {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  missionId String
  mission   Mission  @relation(fields: [missionId], references: [id])
  number    Int
  createdAt DateTime @default(now())
}
